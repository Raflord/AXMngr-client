/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as MadeiraIndexRouteImport } from './routes/madeira/index'
import { Route as InsumosIndexRouteImport } from './routes/insumos/index'
import { Route as CeluloseIndexRouteImport } from './routes/celulose/index'
import { Route as CeluloseRelatorioRouteImport } from './routes/celulose/relatorio'
import { Route as CeluloseManualRouteImport } from './routes/celulose/manual'

const IndexLazyRouteImport = createFileRoute('/')()

const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const MadeiraIndexRoute = MadeiraIndexRouteImport.update({
  id: '/madeira/',
  path: '/madeira/',
  getParentRoute: () => rootRouteImport,
} as any)
const InsumosIndexRoute = InsumosIndexRouteImport.update({
  id: '/insumos/',
  path: '/insumos/',
  getParentRoute: () => rootRouteImport,
} as any)
const CeluloseIndexRoute = CeluloseIndexRouteImport.update({
  id: '/celulose/',
  path: '/celulose/',
  getParentRoute: () => rootRouteImport,
} as any)
const CeluloseRelatorioRoute = CeluloseRelatorioRouteImport.update({
  id: '/celulose/relatorio',
  path: '/celulose/relatorio',
  getParentRoute: () => rootRouteImport,
} as any)
const CeluloseManualRoute = CeluloseManualRouteImport.update({
  id: '/celulose/manual',
  path: '/celulose/manual',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/celulose/manual': typeof CeluloseManualRoute
  '/celulose/relatorio': typeof CeluloseRelatorioRoute
  '/celulose': typeof CeluloseIndexRoute
  '/insumos': typeof InsumosIndexRoute
  '/madeira': typeof MadeiraIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/celulose/manual': typeof CeluloseManualRoute
  '/celulose/relatorio': typeof CeluloseRelatorioRoute
  '/celulose': typeof CeluloseIndexRoute
  '/insumos': typeof InsumosIndexRoute
  '/madeira': typeof MadeiraIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/celulose/manual': typeof CeluloseManualRoute
  '/celulose/relatorio': typeof CeluloseRelatorioRoute
  '/celulose/': typeof CeluloseIndexRoute
  '/insumos/': typeof InsumosIndexRoute
  '/madeira/': typeof MadeiraIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/celulose/manual'
    | '/celulose/relatorio'
    | '/celulose'
    | '/insumos'
    | '/madeira'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/celulose/manual'
    | '/celulose/relatorio'
    | '/celulose'
    | '/insumos'
    | '/madeira'
  id:
    | '__root__'
    | '/'
    | '/celulose/manual'
    | '/celulose/relatorio'
    | '/celulose/'
    | '/insumos/'
    | '/madeira/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CeluloseManualRoute: typeof CeluloseManualRoute
  CeluloseRelatorioRoute: typeof CeluloseRelatorioRoute
  CeluloseIndexRoute: typeof CeluloseIndexRoute
  InsumosIndexRoute: typeof InsumosIndexRoute
  MadeiraIndexRoute: typeof MadeiraIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/madeira/': {
      id: '/madeira/'
      path: '/madeira'
      fullPath: '/madeira'
      preLoaderRoute: typeof MadeiraIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/insumos/': {
      id: '/insumos/'
      path: '/insumos'
      fullPath: '/insumos'
      preLoaderRoute: typeof InsumosIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/celulose/': {
      id: '/celulose/'
      path: '/celulose'
      fullPath: '/celulose'
      preLoaderRoute: typeof CeluloseIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/celulose/relatorio': {
      id: '/celulose/relatorio'
      path: '/celulose/relatorio'
      fullPath: '/celulose/relatorio'
      preLoaderRoute: typeof CeluloseRelatorioRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/celulose/manual': {
      id: '/celulose/manual'
      path: '/celulose/manual'
      fullPath: '/celulose/manual'
      preLoaderRoute: typeof CeluloseManualRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CeluloseManualRoute: CeluloseManualRoute,
  CeluloseRelatorioRoute: CeluloseRelatorioRoute,
  CeluloseIndexRoute: CeluloseIndexRoute,
  InsumosIndexRoute: InsumosIndexRoute,
  MadeiraIndexRoute: MadeiraIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
