/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const MadeiraIndexLazyImport = createFileRoute('/madeira/')()
const InsumosIndexLazyImport = createFileRoute('/insumos/')()
const CeluloseIndexLazyImport = createFileRoute('/celulose/')()
const CeluloseRelatorioLazyImport = createFileRoute('/celulose/relatorio')()
const CeluloseManualLazyImport = createFileRoute('/celulose/manual')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const MadeiraIndexLazyRoute = MadeiraIndexLazyImport.update({
  id: '/madeira/',
  path: '/madeira/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/madeira/index.lazy').then((d) => d.Route))

const InsumosIndexLazyRoute = InsumosIndexLazyImport.update({
  id: '/insumos/',
  path: '/insumos/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/insumos/index.lazy').then((d) => d.Route))

const CeluloseIndexLazyRoute = CeluloseIndexLazyImport.update({
  id: '/celulose/',
  path: '/celulose/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/celulose/index.lazy').then((d) => d.Route),
)

const CeluloseRelatorioLazyRoute = CeluloseRelatorioLazyImport.update({
  id: '/celulose/relatorio',
  path: '/celulose/relatorio',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/celulose/relatorio.lazy').then((d) => d.Route),
)

const CeluloseManualLazyRoute = CeluloseManualLazyImport.update({
  id: '/celulose/manual',
  path: '/celulose/manual',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/celulose/manual.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/celulose/manual': {
      id: '/celulose/manual'
      path: '/celulose/manual'
      fullPath: '/celulose/manual'
      preLoaderRoute: typeof CeluloseManualLazyImport
      parentRoute: typeof rootRoute
    }
    '/celulose/relatorio': {
      id: '/celulose/relatorio'
      path: '/celulose/relatorio'
      fullPath: '/celulose/relatorio'
      preLoaderRoute: typeof CeluloseRelatorioLazyImport
      parentRoute: typeof rootRoute
    }
    '/celulose/': {
      id: '/celulose/'
      path: '/celulose'
      fullPath: '/celulose'
      preLoaderRoute: typeof CeluloseIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/insumos/': {
      id: '/insumos/'
      path: '/insumos'
      fullPath: '/insumos'
      preLoaderRoute: typeof InsumosIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/madeira/': {
      id: '/madeira/'
      path: '/madeira'
      fullPath: '/madeira'
      preLoaderRoute: typeof MadeiraIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/celulose/manual': typeof CeluloseManualLazyRoute
  '/celulose/relatorio': typeof CeluloseRelatorioLazyRoute
  '/celulose': typeof CeluloseIndexLazyRoute
  '/insumos': typeof InsumosIndexLazyRoute
  '/madeira': typeof MadeiraIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/celulose/manual': typeof CeluloseManualLazyRoute
  '/celulose/relatorio': typeof CeluloseRelatorioLazyRoute
  '/celulose': typeof CeluloseIndexLazyRoute
  '/insumos': typeof InsumosIndexLazyRoute
  '/madeira': typeof MadeiraIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/celulose/manual': typeof CeluloseManualLazyRoute
  '/celulose/relatorio': typeof CeluloseRelatorioLazyRoute
  '/celulose/': typeof CeluloseIndexLazyRoute
  '/insumos/': typeof InsumosIndexLazyRoute
  '/madeira/': typeof MadeiraIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/celulose/manual'
    | '/celulose/relatorio'
    | '/celulose'
    | '/insumos'
    | '/madeira'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/celulose/manual'
    | '/celulose/relatorio'
    | '/celulose'
    | '/insumos'
    | '/madeira'
  id:
    | '__root__'
    | '/'
    | '/celulose/manual'
    | '/celulose/relatorio'
    | '/celulose/'
    | '/insumos/'
    | '/madeira/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CeluloseManualLazyRoute: typeof CeluloseManualLazyRoute
  CeluloseRelatorioLazyRoute: typeof CeluloseRelatorioLazyRoute
  CeluloseIndexLazyRoute: typeof CeluloseIndexLazyRoute
  InsumosIndexLazyRoute: typeof InsumosIndexLazyRoute
  MadeiraIndexLazyRoute: typeof MadeiraIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CeluloseManualLazyRoute: CeluloseManualLazyRoute,
  CeluloseRelatorioLazyRoute: CeluloseRelatorioLazyRoute,
  CeluloseIndexLazyRoute: CeluloseIndexLazyRoute,
  InsumosIndexLazyRoute: InsumosIndexLazyRoute,
  MadeiraIndexLazyRoute: MadeiraIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/celulose/manual",
        "/celulose/relatorio",
        "/celulose/",
        "/insumos/",
        "/madeira/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/celulose/manual": {
      "filePath": "celulose/manual.lazy.tsx"
    },
    "/celulose/relatorio": {
      "filePath": "celulose/relatorio.lazy.tsx"
    },
    "/celulose/": {
      "filePath": "celulose/index.lazy.tsx"
    },
    "/insumos/": {
      "filePath": "insumos/index.lazy.tsx"
    },
    "/madeira/": {
      "filePath": "madeira/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
